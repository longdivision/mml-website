<m-label y="5" z="-6" width="10" height="5" color="red">
</m-label>

<m-position-probe id="my-probe" z="3" range="5" y="1" debug="true" id="my-probe" interval="500"></m-position-probe>

<script>
  const positionProbe = document.getElementById("my-probe");
  const labelElement = document.querySelector("m-label")

  function getShortenedPosition(position) {
    return {
      x: position.x.toString().substring(0, 6),
      y: position.y.toString().substring(0, 6),
      z: position.z.toString().substring(0, 6),
    };
  }

  let lastKnownPosition = { x: 0, y: 0, z: 0 };

  positionProbe.addEventListener("positionmove", ({ detail }) => {
    // This is because of javascript floating point precision
    const shortenedPosition = getShortenedPosition(detail.elementRelative.position);

    // This is to prevent the label from updating every frame if the position is the same
    if (JSON.stringify(lastKnownPosition) === JSON.stringify(shortenedPosition)) return;

    lastKnownPosition = shortenedPosition;

    const colors = ["black", "blue", "green", "white", "red", "purple"];

    let selectedColor = Math.floor(Math.random() * colors.length);

    // We don't want the color to be the same as the ground
    while (colors[selectedColor] === labelElement.getAttribute("color")) {
      selectedColor = Math.floor(Math.random() * colors.length);
    }

    labelElement.setAttribute("color", colors[selectedColor]);
  });
</script>